// <auto-generated />
using JsonColumnTest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JsonColumnTest.Migrations
{
    [DbContext(typeof(TestContext))]
    partial class TestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("jsontest")
                .HasAnnotation("ProductVersion", "8.0.0-rc.2.23480.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JsonColumnTest.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students", "jsontest");
                });

            modelBuilder.Entity("JsonColumnTest.Student", b =>
                {
                    b.OwnsMany("JsonColumnTest.ExamGrade", "ExamGrades", b1 =>
                        {
                            b1.Property<int>("StudentId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<LocalDate>("Date")
                                .HasColumnType("date");

                            b1.Property<int>("Grade")
                                .HasColumnType("integer");

                            b1.Property<string>("Subject")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("StudentId", "Id");

                            b1.ToTable("Students", "jsontest");

                            b1.ToJson("ExamGrades");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");
                        });

                    b.Navigation("ExamGrades");
                });
#pragma warning restore 612, 618
        }
    }
}
